const fs=require("fs-extra"),path=require("path"),{https}=require("follow-redirects"),zlib=require("zlib"),{retry}=require("../retry-promise"),{tryReadYaml}=require("../../../engine/plugins/gatsby-source-redocly-filesystem/utils");function downloadContentsWithRetries(a,b,{retries:d=3,reporter:c}){return retry(function(){return new Promise((d,e)=>{const f=https.get(a,{headers:b},b=>{const g=b.statusCode;if(500<=g)return f.end(),e(new Error(`Assets folder "${a}" download failed with statusCode: ${g}`));if(200!==g){return f.end(),c.panicOnBuild(`Assets folder "${a}" download failed with statusCode: ${g}`),d(void 0)}let h="";b.on("data",function(a){h+=a}),b.on("end",function(){d(h)})})})},{reporter:c,link:a,interval:2e3,retries:d}).catch(a=>(c.panicOnBuild(a.message),Promise.reject(a)))}function downloadFileWithRetries(a){const{link:b,fileAbsolutePath:c,headers:d,reporter:f,downloadOnlyOpenapi:g,contentDir:h}=a;fs.mkdirSync(path.dirname(c),{recursive:!0});const i=fs.createWriteStream(c);return retry(function(){return new Promise((a,j)=>{const k=https.get(b,{headers:d,timeout:5e3},d=>{const e=d.statusCode,l=function(){i.close(),fs.existsSync(c)&&fs.unlinkSync(c),k.end()};return 500<=e?(l(),j(new Error("Server Side Error"))):200===d.statusCode?void(k.on("timeout",()=>(l(),j(new Error(`Timeout while downloading ${b}`)))),d.on("error",function(a){return l(),j(a)}),d.on("end",function(){return f.verbose(`${b} downloaded`),g?void setTimeout(async()=>{const b=await tryReadYaml(c);return b&&(b.swagger||b.openapi)||!fs.existsSync(c)?a(c):(fs.unlinkSync(c),f.info(`Skipping asset (only oas files are supported for non-default version): ${path.relative(h,c)}`),a(void 0))},1e3):a(c)}),"gzip"===d.headers["content-encoding"]?d.pipe(zlib.createGunzip()).pipe(i):d.pipe(i)):(l(),f.panicOnBuild(`Asset ${b} download failed with statusCode: ${d.statusCode}`),a(void 0))})})},{reporter:f,link:b,interval:2e3,retries:3}).catch(a=>(f.panicOnBuild(a.message),Promise.resolve()))}module.exports={downloadContentsWithRetries,downloadFileWithRetries};